<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scm.calculate.repository.CalculateMapper">
    <select id="getVslCodeList" resultType="VslCodeDto">
        select
            vsl_cd, vsl_nm, vsl_dead_wt, vsl_load_posbl_wt
        from
            tcom.tb_vsl_info
        where
            vsl_cd LIKE CONCAT('%', #{vslCd}, '%')
        and
            vsl_nm LIKE CONCAT('%', #{vslNm}, '%')
    </select>
    <select id="getSettleInfoList" resultType="CalculateInfoDto">
        select
            (select cd_v_meaning from tcom.tb_code_definition where cd_v = k.fac_cd) as fac_cd, k.cd_v_meaning as nation_nm,  k.lsp_id, tcd.cd_v_meaning, k.bl_date
            , k.trans_order_no, k.vsl_cd, k.vsl_nm, k.dst_conf_yn, k.acctg_yn, k.clear_curr
            , SUM(k.clear_qty) as clear_qty, ROUND(SUM(k.clear_amt)::numeric,2) as clear_amt, ROUND(k.acctg_amt::numeric,2) as acctg_amt
            , k.close_no, k.inv_inner_no, SUM(k.tot_gross_wt) as tot_gross_wt, k.close_no_yn,  k.vsl_load_posbl_wt * 1000 as vsl_load_posbl_wt
        from
        (
            select
                a.close_no, b.inv_inner_no,b.arr_node_cd, tvi.vsl_load_posbl_wt, b.vsl_cd, b.vsl_nm,  b.trans_order_no
                , b.lsp_id, a.close_no_yn, a.clear_curr
                , b.clear_qty, a.clear_amt, a.acctg_amt, a.acctg_yn, w.cd_v_meaning, w.cd_v
                , b.bl_date, c.delivery_area_cd, b.tot_gross_wt, b.fac_cd , b.dst_conf_yn
            from
                tbms.tb_fri_settle_d a
            full outer join
                tbms.tb_fri_settle_h b
            on
                a.inv_inner_no  = b.inv_inner_no
            and
                a.inv_inner_seq_no = b.inv_inner_seq_no
            left outer join
                tcom.tb_dest_info c
            on
                b.arr_node_cd = c.node_cd
            left outer join
                tcom.tb_vsl_info tvi
            on
                b.vsl_cd = tvi.vsl_cd
            left outer join
                tcom.tb_code_definition w
            on
                c.delivery_area_cd = w.cd_v
            ) k
        left join
            tcom.tb_code_definition tcd
        on
            k.lsp_id = tcd.cd_v
        where
        <choose>
            <when test="startDate!=null&amp;&amp;startDate!=''" >
                    k.bl_date <![CDATA[>=]]> #{startDate}
                AND
                    k.bl_date <![CDATA[<=]]> #{endDate}
            </when>
            <otherwise>
                    k.bl_date LIKE CONCAT('%', #{startDate}, '%')
            </otherwise>
        </choose>
        AND
            k.lsp_id  LIKE CONCAT('%', #{lspId}, '%')
        AND
            k.vsl_cd  LIKE CONCAT('%', #{vslCd}, '%')
        AND
            k.trans_order_no LIKE CONCAT('%', #{transOrderNo}, '%')
        AND
            k.cd_v_meaning  LIKE CONCAT('%', #{cdVmeaning}, '%')
        AND
            k.dst_conf_yn LIKE CONCAT('%', #{dstConfYn}, '%')
        group by
            fac_cd, k.inv_inner_no, nation_nm, k.cd_v, k.close_no, k.lsp_id
            , k.bl_date, k.vsl_nm, k.trans_order_no, tcd.cd_v_meaning, k.vsl_cd
            , k.dst_conf_yn,  k.acctg_yn, k.clear_curr, vsl_load_posbl_wt, k.close_no_yn, acctg_amt
    </select>
    <select id="getCalculateDetailList" resultType="CalculateInfoDto">
        select
            p.inv_inner_no, p.inv_inner_seq_no, (select cd_v_meaning from tcom.tb_code_definition where cd_v = item_cd) as item_cd,
            p.local_supp_amt, p.local_curr_cd, p.local_exr, p.unit_price, p.tot_gross_wt_unit_cd,
            p.fac_cd, p.arr_node_nm, p.ref_doc_no, p.cd_v_meaning as nation_nm, p.lsp_id, tcd.cd_v_meaning,
            p.vsl_cd, p.vsl_nm, p.trans_order_no, p.close_no_yn,
            p.clear_curr, p.bl_date, p.clear_qty as clear_qty, p.clear_amt as clear_amt,
            p.tot_gross_wt as tot_gross_wt, p.acctg_amt as acctg_amt
        from
        (
            select
                k.inv_inner_seq_no, k.item_cd, k.local_supp_amt, k.local_curr_cd, k.local_exr, k.unit_price, k.tot_gross_wt_unit_cd, k.fac_cd, k.ref_doc_no,k.arr_node_nm, k.acctg_yn, k.lsp_id,
                k.vsl_cd , k.vsl_nm ,
                k.trans_order_no , k.close_no_yn ,
                k.clear_curr , k.clear_qty , k.clear_amt ,
                k.acctg_amt, k.bl_date, k.tot_gross_wt, k.inv_inner_no, w.cd_v_meaning
            from
            (
                select
                    b.inv_inner_no, b.inv_inner_seq_no, b.item_cd, a.local_supp_amt, a.local_curr_cd, a.local_exr
                    , a.unit_price, b.tot_gross_wt_unit_cd, b.fac_cd, b.ref_doc_no,a.arr_node_nm
                    , b.vsl_cd, b.vsl_nm,  b.trans_order_no
                    , b.lsp_id, a.close_no_yn, a.clear_curr
                    , b.clear_qty, a.clear_amt, a.acctg_amt, a.acctg_yn
                    , b.bl_date, b.tot_gross_wt, c.delivery_area_cd
                from
                    tbms.tb_fri_settle_h b
                full outer join
                    tbms.tb_fri_settle_d a
                on
                    a.inv_inner_no = b.inv_inner_no
                and
                    a.inv_inner_seq_no = b.inv_inner_seq_no
                left outer join
                    tcom.tb_dest_info c
                on
                    a.arr_node_cd = c.node_cd
                ) k
            left outer join
                tcom.tb_code_definition w
            on
                k.delivery_area_cd = w.cd_v
            ) p
        left outer join
            tcom.tb_code_definition tcd
        on
            p.lsp_id = tcd.cd_v
        where
            p.trans_order_no = #{transOrderNo}
        and
            p.bl_date = #{blDate}
        order by
            p.inv_inner_seq_no
    </select>
    <update id="updateFrtStatus" parameterType="FrtStatusDto">
        UPDATE
            tbms.tb_fri_settle_h
        SET
            frt_status = #{frtStatus},
            dst_conf_yn= #{dstConfYn}
        WHERE
            trans_order_no = #{transOrderNo}
    </update>
    <select id="getAutoIncrementAccountId" resultType="String">
        select lpad(lpad(lpad(lpad(nextval('seq_account_info')::text,6,'0'),13,concat(TO_CHAR(NOW()::DATE, 'yymmdd'), '-')),19,concat(#{expNo}, '-')),22,concat('EX', '-'));
    </select>

    <update id="updateAccountConnInfo" parameterType="AccountConnInfoDto">
        UPDATE
            tbms.tb_fri_settle_d
        SET
            close_no=#{closeNo}, close_no_yn=#{closeNoYn}, acctg_yn=#{acctgYn}, acctg_amt=#{acctgAmt}
        WHERE
            inv_inner_no = #{invInnerNo}
    </update>
    <insert id="insertCalculateInfo" parameterType="String">
        insert into tbms.tb_fri_settle_d
            (clear_amt, local_supp_amt, trff_id, seq_no, clear_curr, cntrt_curr_cd, pay_curr_cd, unit_price,
            inv_inner_no, inv_inner_seq_no, detl_svc_tcd, exr_aply_date,
            dep_node_cd ,ARR_NODE_CD, DEP_NODE_NM, ARR_NODE_NM, ARR_DATE, CUST_ID)
        select
            (cal.clear_qty * tj.unit_price) as clear_amt,
            ROUND(cal.clear_qty * tj.unit_price * 1299.8, 2) as local_supp_amt,
            tj.trff_id, tj.seq_no, tj.cntrt_curr_cd as clear_curr, tj.cntrt_curr_cd , tj.pay_curr_cd, tj.unit_price,
            cal.inv_inner_no, cal.inv_inner_seq_no, cal.detl_svc_tcd, cal.bl_date,
            cal.dep_node_cd, cal.ARR_NODE_CD,
            (select node_desc from tcom.tb_dest_info where node_cd = cal.dep_node_cd) as DEP_NODE_NM,
            (select node_desc from tcom.tb_dest_info where node_cd = cal.ARR_NODE_CD) as arr_node_nm,
            ARR_DATE, cal.CUST_ID
        from
            tbms.tb_fri_settle_h cal
        join
            (
            select
                a.seq_no, a.arr_cd, a.cntrt_id, a.trff_id, a.cntrt_curr_cd , a.pay_curr_cd, a.unit_price, a.prod_gcd, a.arr_nm,  a.inco_cd
            from
            (
                select
                    h.dep_cd, h.arr_cd, h.trff_stat_date, h.trff_end_date, h.inco_cd, h.prod_gcd,
                    d.trff_id, d.cntrt_curr_cd , d.pay_curr_cd, d.unit_price,
                    h.cntrt_id, h.arr_nm, h.seq_no
                from
                    tcms.tb_cntrt_trff_cond_h h
                join
                    tcms.tb_cntrt_trff_cond_val_d d
                on
                    h.trff_id = d.trff_id) a
                join
                    TCMS.TB_CNTRT_INFO b
                on
                    a.cntrt_id= b.cntrt_id
                where
                    b.cntrt_scd = '60'
            ) tj
        on
            cal.arr_node_cd = tj.arr_cd
        and
            (select node_desc from tcom.tb_dest_info where node_cd = cal.ARR_NODE_CD) = tj.arr_nm
        and
            cal.strg_loc_cd = tj.prod_gcd
        and
            cal.inco_cd = tj.inco_cd
        and
            tj.pay_curr_cd is not null;
        and
            cal.trans_order_no =#{trans_order_no};
    </insert>

</mapper>